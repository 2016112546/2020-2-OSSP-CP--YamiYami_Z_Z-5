import random

# Tetrimino colors
cyan = (69, 206, 204) #rgb(69, 206, 204) # I
blue = (64, 111, 249) #rgb(64, 111, 249) # J
orange = (253, 189, 53) #rgb(253, 189, 53) # L
yellow = (246, 227, 90) #rgb(246, 227, 90) # O
green = (98, 190, 68) #rgb(98, 190, 68) # S
pink = (242, 64, 235) #rgb(242, 64, 235) # T
red = (225, 13, 27) #rgb(225, 13, 27) # Z

w_pink = (231,59,109)
w_sky = (165,216,243)
z_yellow = (252,215,2)
z_green = (185,205,12)
z_blue = (159,68,145)
y_red = (241,141,56)
y_violet = (96,57,140)

#테트리스 블럭 clss
class Piece:
    O = (((0,0,0,0,0), (0,0,0,0,0),(0,0,1,1,0),(0,0,1,1,0),(0,0,0,0,0)),) * 4

    I = (((0,0,0,0,0),(0,0,0,0,0),(0,2,2,2,2),(0,0,0,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,2,0,0),(0,0,2,0,0),(0,0,2,0,0),(0,0,2,0,0)),
         ((0,0,0,0,0),(0,0,0,0,0),(2,2,2,2,0),(0,0,0,0,0),(0,0,0,0,0)),
         ((0,0,2,0,0),(0,0,2,0,0),(0,0,2,0,0),(0,0,2,0,0),(0,0,0,0,0)))

    L = (((0,0,0,0,0),(0,0,3,0,0),(0,0,3,0,0),(0,0,3,3,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,0,0,0),(0,3,3,3,0),(0,3,0,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,3,3,0,0),(0,0,3,0,0),(0,0,3,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,0,3,0),(0,3,3,3,0),(0,0,0,0,0),(0,0,0,0,0)))

    J = (((0,0,0,0,0),(0,0,4,0,0),(0,0,4,0,0),(0,4,4,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,4,0,0,0),(0,4,4,4,0),(0,0,0,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,4,4,0),(0,0,4,0,0),(0,0,4,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,0,0,0),(0,4,4,4,0),(0,0,0,4,0),(0,0,0,0,0)))

    Z = (((0,0,0,0,0),(0,0,0,5,0),(0,0,5,5,0),(0,0,5,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,0,0,0),(0,5,5,0,0),(0,0,5,5,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,5,0,0),(0,5,5,0,0),(0,5,0,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,5,5,0,0),(0,0,5,5,0),(0,0,0,0,0),(0,0,0,0,0)))

    S = (((0,0,0,0,0),(0,0,6,0,0),(0,0,6,6,0),(0,0,0,6,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,0,0,0),(0,0,6,6,0),(0,6,6,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,6,0,0,0),(0,6,6,0,0),(0,0,6,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,6,6,0),(0,6,6,0,0),(0,0,0,0,0),(0,0,0,0,0)))

    T = (((0,0,0,0,0),(0,0,7,0,0),(0,0,7,7,0),(0,0,7,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,0,0,0),(0,7,7,7,0),(0,0,7,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,7,0,0),(0,7,7,0,0),(0,0,7,0,0),(0,0,0,0,0)),
         ((0,0,0,0,0),(0,0,7,0,0),(0,7,7,7,0),(0,0,0,0,0),(0,0,0,0,0)))

    PIECES = {'O': O, 'I': I, 'L': L, 'J': J, 'Z': Z, 'S':S, 'T':T}

    #T_COLOR = [yellow ,cyan, orange, blue, red, green, pink, (55, 55, 55)]
    T_COLOR = [w_pink ,w_sky, z_blue, z_green, z_yellow, y_violet, y_red, (55, 55, 55)]

    ai_tetris_shapes = [
        [[1, 1, 1],
         [0, 1, 0]],

        [[0, 2, 2],
         [2, 2, 0]],

        [[3, 3, 0],
         [0, 3, 3]],

        [[4, 0, 0],
         [4, 4, 4]],

        [[0, 0, 5],
         [5, 5, 5]],

        [[6, 6, 6, 6]],

        [[7, 7],
         [7, 7]]
    ]

    def __init__(self, piece_name=None):
        if piece_name:
            self.piece_name = piece_name
        else:
            self.piece_name = random.choice(list(Piece.PIECES.keys()))
        self.rotation = 0
        self.array2d = Piece.PIECES[self.piece_name][self.rotation]

    def __iter__(self):
        for row in self.array2d:
            yield row

    def rotate(self, clockwise=True):
        if clockwise:
            self.rotation = (self.rotation + 1) % 4
        else:
            self.rotation = (self.rotation - 1) % 4
        self.array2d = Piece.PIECES[self.piece_name][self.rotation]
